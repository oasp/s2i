kind: List
apiVersion: v1
metadata:
  name: s2i-devonfw
items:
- kind: Template
  apiVersion: v1
  metadata:
    name: devonfw-java
    annotations:
      description: DevonFW application (java/backend)
      openshift.io/display-name: DevonFW Java
      iconClass: devonfw-java-logo
      tags: instant-app,devonfw,springboot,maven,java
  labels:
    createdBy: devonfw-java-server-template
  parameters:
  - description: 'The name for the application. It can''t contain whitespaces. It
      should be the app name including technology, example: mythaistar-java'
    name: APPLICATION_NAME
    displayName: Application name
    required: true
  - description: 'The name for the group list of applications. It can''t contain whitespaces.
      It should be the app name excluding technology, example: My-Thai-Star'
    name: APPLICATION_GROUP_NAME
    displayName: Application group name
    required: true
  - description: 'Custom hostname for service routes. Leave blank for default hostname,
      e.g.: <application-name>.<project>.<default-domain-suffix>'
    name: APPLICATION_HOSTNAME
    displayName: Application hostname
  - description: 'Git source URI for application, example: https://github.com/oasp/my-thai-star.git'
    name: GIT_URI
    displayName: Git repository URI
    required: true
  - description: 'Git branch/tag reference, example: develop'
    name: GIT_REF
    displayName: Git repository BRANCH
    required: true
  - description: 'Git directory context, example: /java/mtsj'
    name: CONTEXT_DIR
    displayName: Git repository CONTEXT
  - description: Application options. These options will be passed to the Spring Boot
      command line
    name: APP_OPTIONS
  - description: Github trigger secret
    name: GITHUB_TRIGGER_SECRET
    from: "[a-zA-Z0-9]{8}"
    generate: expression
  - description: Generic build trigger secret
    name: GENERIC_TRIGGER_SECRET
    from: "[a-zA-Z0-9]{8}"
    generate: expression
  objects:
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_GROUP_NAME}"
        application: "${APPLICATION_NAME}"
    spec:
      triggers:
      - type: GitHub
        github:
          secret: "${GITHUB_TRIGGER_SECRET}"
      - type: Generic
        generic:
          secret: "${GENERIC_TRIGGER_SECRET}"
      - type: ImageChange
        imageChange: {}
      source:
        type: Git
        git:
          uri: "${GIT_URI}"
          ref: "${GIT_REF}"
        contextDir: "${CONTEXT_DIR}"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: devonfw
            name: s2i-devonfw-java:latest
          env:
          - name: MAVEN_GOALS
            value: clean install package
          - name: MAVEN_ARGS
            value: "-DskipTests -B"
          - name: MAVEN_OPTS
            value: "-Xmx1024m -Xms1024m"
          - name: MAVEN_PROFILE
            value: ''
          - name: MAVEN_MIRROR_URL
            value: ''
          - name: APP_SUFFIX
            value: bootified
          - name: ARTIFACT_DIR
            value: server/target
      output:
        to:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}:latest"
      resources: {}
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_GROUP_NAME}"
        application: "${APPLICATION_NAME}"
    spec:
      dockerImageRepository: ''
      tags:
      - name: latest
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_GROUP_NAME}"
        application: "${APPLICATION_NAME}"
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
        resources: {}
      triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - "${APPLICATION_NAME}"
          from:
            kind: ImageStreamTag
            name: "${APPLICATION_NAME}:latest"
      replicas: 1
      selector:
        deploymentconfig: "${APPLICATION_NAME}"
      template:
        metadata:
          labels:
            deploymentconfig: "${APPLICATION_NAME}"
        spec:
          containers:
          - name: "${APPLICATION_NAME}"
            image: "${APPLICATION_NAME}"
            ports:
            - containerPort: 8081
              protocol: TCP
            resources: {}
            terminationMessagePath: "/dev/termination-log"
            imagePullPolicy: IfNotPresent
            securityContext:
              capabilities: {}
              privileged: false
          restartPolicy: Always
          dnsPolicy: ClusterFirst
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_GROUP_NAME}"
        application: "${APPLICATION_NAME}"
    spec:
      host: "${APPLICATION_HOSTNAME}"
      to:
        kind: Service
        name: "${APPLICATION_NAME}"
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${APPLICATION_NAME}"
      labels:
        app: "${APPLICATION_GROUP_NAME}"
        application: "${APPLICATION_NAME}"
    spec:
      ports:
      - name: "${APPLICATION_NAME}-http"
        port: 8081
        targetPort: 8081
      selector:
        deploymentconfig: "${APPLICATION_NAME}"
      type: ClusterIP
      sessionAffinity: None
